name: CI

on:
  push:
    branches: [ master, main ]
    tags-ignore: [ 'v*' ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:
  workflow_call:

jobs:
  test-go:
    name: Test Go Provider
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure git
      run: git config --global advice.defaultBranchName false
      
    - name: Set up Go
      uses: actions/setup-go@v5.5.0
      with:
        go-version: '1.21'
        
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-v2-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-v2-
        
    - name: Install dependencies
      run: |
        # Install kubectl
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        
        # Install kind
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind
        
        # Install Terraform
        sudo apt-get update && sudo apt-get install -y unzip
        curl -LO "https://releases.hashicorp.com/terraform/1.6.6/terraform_1.6.6_linux_amd64.zip"
        unzip terraform_1.6.6_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        rm terraform_1.6.6_linux_amd64.zip
        
    - name: Download Go dependencies
      run: go mod download
      
    - name: Run unit tests
      run: make test-unit
      
    - name: Run acceptance tests
      run: make test-acc
      env:
        TF_ACC: 1
        
    - name: Generate coverage report
      run: make test-coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        fail_ci_if_error: false

  test-hcl:
    name: Test HCL (Terraform)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure git
      run: git config --global advice.defaultBranchName false
      
    - name: Set up Go
      uses: actions/setup-go@v5.5.0
      with:
        go-version: '1.21'
        
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-v2-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-v2-
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.6.6'
        
    - name: Build and install provider
      run: make build && make install
      
    - name: Test basic cluster configuration
      run: |
        cd test-fixtures
        terraform init
        terraform validate
        terraform plan
        
    - name: Test full configuration
      run: |
        cd test-fixtures
        terraform validate

  test-sdks:
    name: Test TypeScript and Python SDKs  
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure git
      run: git config --global advice.defaultBranchName false
      
    - name: Set up Go
      uses: actions/setup-go@v5.5.0
      with:
        go-version: '1.21'
        
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-v2-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-v2-
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.6.6'
        
    - name: Install CDKTF CLI
      run: npm install -g cdktf-cli@latest
      
    - name: Build and test all SDKs
      run: make sdk-ci
      env:
        NODE_NO_WARNINGS: 1