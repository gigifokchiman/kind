name: Build
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: arm64
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true
        
    - name: Download dependencies
      run: go mod download
      
    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        BINARY_NAME="terraform-provider-kind"
        if [ "$GOOS" = "windows" ]; then
          BINARY_NAME="${BINARY_NAME}.exe"
        fi
        
        go build -o ${BINARY_NAME} \
          -ldflags="-s -w -X main.version=${GITHUB_REF#refs/tags/}" \
          .
          
        # Create archive
        ARCHIVE_NAME="terraform-provider-kind_${GITHUB_REF#refs/tags/}_${GOOS}_${GOARCH}"
        if [ "$GOOS" = "windows" ]; then
          zip -q "${ARCHIVE_NAME}.zip" ${BINARY_NAME}
        else
          tar -czf "${ARCHIVE_NAME}.tar.gz" -C . ${BINARY_NAME}
        fi
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: terraform-provider-kind-${{ matrix.goos }}-${{ matrix.goarch }}
        path: terraform-provider-kind*
        
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v6
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}
        
    - name: Sign artifacts
      run: |
        # Find all terraform-provider-kind archives and sign them
        find . -name "terraform-provider-kind*.zip" -o -name "terraform-provider-kind*.tar.gz" | while read file; do
          echo "Signing $file"
          gpg --batch --yes --detach-sign --armor "$file"
        done
        
        # Create SHA256SUMS file
        find . -name "terraform-provider-kind*.zip" -o -name "terraform-provider-kind*.tar.gz" | while read file; do
          sha256sum "$file" >> terraform-provider-kind_SHA256SUMS
        done
        
        # Sort the SHA256SUMS file for consistency
        sort terraform-provider-kind_SHA256SUMS -o terraform-provider-kind_SHA256SUMS
        
        # Sign the SHA256SUMS file
        gpg --batch --yes --detach-sign --armor terraform-provider-kind_SHA256SUMS
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          **/terraform-provider-kind*.zip
          **/terraform-provider-kind*.tar.gz
          **/terraform-provider-kind*.zip.asc
          **/terraform-provider-kind*.tar.gz.asc
          terraform-provider-kind_SHA256SUMS*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
